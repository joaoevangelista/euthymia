 image: "ruby:2.3"

 services:
   - postgres:latest
   - redis:alpine

 stages:
   - lint
   - test
   - deploy
   - registry

 cache:
  paths:
    - vendor/ruby

 variables:
   POSTGRES_DB: euthymia_test
   POSTGRES_USER: euthymia
   POSTGRES_PASSWORD: eutymia
   RAILS_ENV: test

 before_script:
   - sh ./scripts/install-node.sh
   - ruby -v                                   # Print out ruby version for debugging
   - gem install bundler  --no-ri --no-rdoc    # Bundler is not installed with the image
   - bundle install -j $(nproc) --path vendor  # Install dependencies into ./vendor/ruby
   - gem install rubocop rubocop-rspec --no-rdoc --no-ri     # Install rubocop globally
   - rake db:migrate
   - rake db:seed

 after_script:
   - rake db:drop

 rubocop:
   stage: lint
   variables:
     DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB
   script:
   - rubocop
   tags:
   - docker

 rspec:
   stage: test
   variables:
     DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB
     REDIS_CACHE_URI: 'redis://redis:6379/0/cache'
     REDIS_SESSION_URI: 'redis://redis:6379/0/session'
   script:
   - bundle exec rspec
   tags:
   - docker

 deploy:image:
   image: docker:git
   services:
     - docker:dind
   script:
     - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
     - docker build -t registry.gitlab.com/joaoevangelista/euthymia .
     - docker push registry.gitlab.com/joaoevangelista/euthymia:$CI_BUILD_TAG
   tags:
     - docker
   only:
     - tags
   when: on_success
 
 deploy:heroku:production
   type: deploy
   environment: heroku:production
   script:
    - gem install dpl
    - dpl --provider=heroku --app=euthymia --api-key=$HEROKU_PRODUCTION_API_KEY
   tags:
    - docker
   only:
    - tags
   when: on_success
   
